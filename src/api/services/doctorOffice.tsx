import { DoctorOfficePath } from "../enums/routes";
import { apiPrivate } from "../api";
import { DoctorOfficeDto } from "../models/doctoroffice";

export async function getDoctorOfficeById(doctorOfficeId: string) {
    try {
        console.log('[DoctorOffice] üè• Buscando consult√≥rio do m√©dico por ID:', doctorOfficeId);
        const response = await apiPrivate.get(`${DoctorOfficePath.GET_DOCTOR_OFFICE_BY_ID}/${doctorOfficeId}`);
        console.log('[DoctorOffice] ‚úÖ Consult√≥rio do m√©dico encontrado');
        return response.data;
    } catch (error: any) {
        console.error('[DoctorOffice] ‚ùå Erro ao buscar consult√≥rio do m√©dico:', error.response?.status);
        throw error;
    }
}

export async function getAllDoctorOfficesByDoctorId(doctorId: string) {
    try {
        console.log('[DoctorOffice] üë• Buscando todos os consult√≥rios do m√©dico por ID do m√©dico:', doctorId);
        const response = await apiPrivate.get(`${DoctorOfficePath.GET_ALL_DOCTOR_OFFICES_BY_DOCTOR_ID}/${doctorId}`);
        console.log('[DoctorOffice] ‚úÖ Todos os consult√≥rios do m√©dico encontrados');
        return response.data;
    } catch (error: any) {
        console.error('[DoctorOffice] ‚ùå Erro ao buscar todos os consult√≥rios do m√©dico:', error.response?.status);
            throw error;
        }
}

export async function getAllDoctorOffices() {
    try {
        console.log('[DoctorOffice] üë• Buscando todos os consult√≥rios dos m√©dicos...');
        const response = await apiPrivate.get(DoctorOfficePath.GET_ALL_DOCTOR_OFFICES);
        console.log('[DoctorOffice] ‚úÖ Todos os consult√≥rios dos m√©dicos encontrados');
        return response.data;
    }
    catch (error: any) {
        console.error('[DoctorOffice] ‚ùå Erro ao buscar todos os consult√≥rios dos m√©dicos:', error.response?.status);
        throw error;
    }  
}

export async function getPrimaryDoctorOfficeByDoctorId(doctorId: string) {
    try {
        console.log('[DoctorOffice] üè• Buscando consult√≥rio principal do m√©dico por ID do m√©dico:', doctorId);
        const response = await apiPrivate.get(`${DoctorOfficePath.GET_PRIMARY_DOCTOR_OFFICE_BY_DOCTOR_ID}/${doctorId}`);
        console.log('[DoctorOffice] ‚úÖ Consult√≥rio principal do m√©dico encontrado');
        return response.data;
    } catch (error: any) {
        console.error('[DoctorOffice] ‚ùå Erro ao buscar consult√≥rio principal do m√©dico:', error.response?.status);
        throw error;
    }
}
export async function createDoctorOffice(doctorOfficeDto: DoctorOfficeDto.DoctorOffice) {
    try {
        console.log('[DoctorOffice] üè• Criando consult√≥rio do m√©dico:', doctorOfficeDto);
        const response = await apiPrivate.post(DoctorOfficePath.CREATE_DOCTOR_OFFICE, doctorOfficeDto);
        console.log('[DoctorOffice] ‚úÖ Consult√≥rio do m√©dico criado');
        return response.data;
    } catch (error: any) {
        console.error('[DoctorOffice] ‚ùå Erro ao criar consult√≥rio do m√©dico:', error.response?.status);
        throw error;
    }
}